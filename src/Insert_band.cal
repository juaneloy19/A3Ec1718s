actor Insert_band () int(size = 1) msg_input, int(size=13) dct_input ==> int(size = 13) output:
    
    
    @native function check_last_idx(int b) --> bool end
    @native function round_nearest_band0(int b, int multiple) --> int end 
    @native function round_nearest_band1(int b, int multiple) --> int end
	
DCT_BUFFERING:	action dct_input:[a] repeat 64, msg_input:[b]  ==> output:[out2] repeat 64
	var int out[64], int(size=13) out2[64]
	do
	foreach int s in 0 .. 62 do
		out2[s] := a[s];
		println("DCT_BUFFERING: Directly sending DCT input to output " + out2[s]);
	end
  	if b = 0 then
		println("DCT_BUFFERING_band: last index is" + a[63]);
		a[63] := round_nearest_band0(a[63],16);
		println("DCT_BUFFERING_band: want to send 0 changing last index to " + a[63]);
  	else
  		println("DCT_BUFFERING_band: last index is" + a[63]);
		a[63] := round_nearest_band1(a[63],16);
		println("DCT_BUFFERING_band: want to send 1 changing last index to " + a[63]);
  	end
	out2[63] := a[63];
    println("DCT_BUFFERING: Done sending " + out2[63]);
end

DCT_BYPASS:	action dct_input:[a] repeat 64 ==> output:[out2] repeat 64
	var int out[64], int(size=13) out2[64]
	do
	foreach int s in 0 .. 63 do
		out2[s] := a[s];
		println("DCT_BYPASS: Directly sending DCT input to output " + out2[s]);
	end
    println("DCT_BYPASS: Done sending ");
end

priority 
	DCT_BUFFERING > DCT_BYPASS;
end	
end