actor Extract_consolidate () int(size=1) buffer_input ==> int(size = 8) output:
	int count := 1;
	int (size =8)a := 0;
	int (size =8) tmp_value:=1;
	List (type:int (size =1), size = 8) charBuffer;
	
	procedure power_func(int (size =8) c, int (size =8) d, int (size =8)value)
    begin
     count := 1;
      while count <= d do
            value := value * c;
            count:= count +1;
      end
      println("power_func: for input " + d + "value is" + value);
    end

	procedure convert_to_dec(int(size =1) buff[8], int(size =8) n)
	begin
	 a := 0;
	 tmp_value:=1;
		foreach int i in 0 .. 7 do
		    power_func(2, a, tmp_value);
		    n := (buff[7-i] * tmp_value) + n;
		    tmp_value:=1;
            a := a +1;
    	end
    	println("convert_to_dec: converting to " + n);
	end
	
EXTRACT_CONSOL:	action buffer_input:[b] repeat 8 ==> output:[out]
	var int (size =8) out
	do
	foreach int i in 0 .. 7 do
	        charBuffer[i] := b[i];
    end
    convert_to_dec(charBuffer, out);
    println("EXTRACT_BUFFERING: Done sending " + out);
end
    
end